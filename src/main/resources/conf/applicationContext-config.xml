<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package = "com.yss" />

    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"-->
                <!--p:defaultEncoding="UTF-8"-->
                <!--p:maxUploadSize="5400000">-->
    <!--</bean>-->

    <bean id="testHandler" class="com.yss.TestHandler"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations"> <!-- PropertyPlaceholderConfigurer类中有个locations属性，接收的是一个数组，即我们可以在下面配好多个properties文件 -->
            <array>
                <value>classpath:conf.properties</value>
            </array>
        </property>
    </bean>

    <!-- curator -->
    <bean id="retryUntilElapsed" class="org.apache.curator.retry.RetryUntilElapsed">
        <constructor-arg name="maxElapsedTimeMs" value="6000"/>
        <constructor-arg name="sleepMsBetweenRetries" value="1000"/>
    </bean>

    <bean id="curatorFramework" class="org.apache.curator.framework.CuratorFrameworkFactory" factory-method="newClient"
          init-method="start">
        <constructor-arg name="connectString" value="${zkServerHost}:${zkServerPort}"/>
        <constructor-arg name="retryPolicy" ref="retryUntilElapsed"/>
    </bean>

    <bean id="stormSubmiter" class="com.yss.storm.submit.StormRemoteJarSubmiter">
         <property name="remoteZKServer" value="${zkServerHost}" />
         <property name="remoteZKPort" value="${zkServerPort}" />
    </bean>

    <bean id="stormNodesService" class="com.yss.storm.StormNodesService" />

    <bean id="stormRestClient" class="com.yss.storm.monitor.StormRestClient"/>

    <bean id="stormMonitorRestApiService" class="com.yss.storm.monitor.StormMonitorRestApiService"/>


    <bean id="yarnLaunchService" class="com.yss.yarn.launch.YarnLaunch">
        <property name="appName" value="${yarnAppName}" />
        <property name="defaultQueue" value="${yarnQueue}" />
        <property name="amSize" value="${amSize}" />
        <property name="classPath" value="${appMasterClassPath}" />
        <!--<property name="yarnConf">-->
            <!--<map>-->
                <!--<entry key="fs.defaultFS" value="${fs.defaultFS}" />-->
                <!--<entry key="yarn.resourcemanager.resource-tracker.address" value="${yarn.resourcemanager.resource-tracker.address}"/>-->
                <!--<entry key="yarn.resourcemanager.address" value="${yarn.resourcemanager.address}" />-->
                <!--<entry key="yarn.resourcemanager.scheduler.address" value="${yarn.resourcemanager.scheduler.address}"/>-->
                <!--<entry key="yarn.resourcemanager.admin.address" value="${yarn.resourcemanager.admin.address}"/>-->
            <!--</map>-->
        <!--</property>-->
    </bean>

</beans>